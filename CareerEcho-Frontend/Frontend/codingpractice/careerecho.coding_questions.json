[{
  "_id": {
    "$oid": "6863b413df9008efb35f7dba"
  },
  "title": "Sum of Two Numbers",
  "description": "Write a program that reads two integers and prints their sum.",
  "input": "5 7",
  "output": "12",
  "level": "basic"
},
{
  "_id": {
    "$oid": "6863b413df9008efb35f7dbb"
  },
  "title": "Maximum of Two Numbers",
  "description": "Find the maximum of two given numbers.",
  "input": "10 25",
  "output": "25",
  "level": "basic"
},
{
  "_id": {
    "$oid": "6863b413df9008efb35f7dbc"
  },
  "title": "Check Even or Odd",
  "description": "Determine whether a given number is even or odd.",
  "input": "7",
  "output": "Odd",
  "level": "basic"
},
{
  "_id": {
    "$oid": "6863b413df9008efb35f7dbd"
  },
  "title": "Factorial of a Number",
  "description": "Compute the factorial of a non-negative integer.",
  "input": "5",
  "output": "120",
  "level": "basic"
},
{
  "_id": {
    "$oid": "6863b413df9008efb35f7dbe"
  },
  "title": "Reverse a Number",
  "description": "Reverse the digits of a given number.",
  "input": "1234",
  "output": "4321",
  "level": "basic"
},
{
  "_id": {
    "$oid": "6863b413df9008efb35f7dbf"
  },
  "title": "Check Prime",
  "description": "Check whether a number is prime.",
  "input": "11",
  "output": "Prime",
  "level": "basic"
},
{
  "_id": {
    "$oid": "6863b413df9008efb35f7dc0"
  },
  "title": "Fibonacci Series",
  "description": "Print the first N terms of the Fibonacci series.",
  "input": "5",
  "output": "0 1 1 2 3",
  "level": "basic"
},
{
  "_id": {
    "$oid": "6863b413df9008efb35f7dc1"
  },
  "title": "Sum of Digits",
  "description": "Find the sum of digits of a number.",
  "input": "1234",
  "output": "10",
  "level": "basic"
},
{
  "_id": {
    "$oid": "6863b413df9008efb35f7dc2"
  },
  "title": "Palindrome Number",
  "description": "Check whether a number is a palindrome.",
  "input": "121",
  "output": "Palindrome",
  "level": "basic"
},
{
  "_id": {
    "$oid": "6863b413df9008efb35f7dc3"
  },
  "title": "Print Multiplication Table",
  "description": "Print the multiplication table of a given number.",
  "input": "3",
  "output": "3 6 9 12 15 18 21 24 27 30",
  "level": "basic"
},
{
  "_id": {
    "$oid": "6863b413df9008efb35f7dc4"
  },
  "title": "Count Digits",
  "description": "Count the number of digits in a given number.",
  "input": "10583",
  "output": "5",
  "level": "basic"
},
{
  "_id": {
    "$oid": "6863b413df9008efb35f7dc5"
  },
  "title": "Check Leap Year",
  "description": "Check whether a year is a leap year.",
  "input": "2024",
  "output": "Leap Year",
  "level": "basic"
},
{
  "_id": {
    "$oid": "6863b413df9008efb35f7dc6"
  },
  "title": "Check Alphabet or Not",
  "description": "Check if a given character is an alphabet.",
  "input": "g",
  "output": "Alphabet",
  "level": "basic"
},
{
  "_id": {
    "$oid": "6863b413df9008efb35f7dc7"
  },
  "title": "Area of Circle",
  "description": "Calculate the area of a circle from radius.",
  "input": "7",
  "output": "153.94",
  "level": "basic"
},
{
  "_id": {
    "$oid": "6863b413df9008efb35f7dc8"
  },
  "title": "Simple Interest",
  "description": "Calculate the simple interest.",
  "input": "P=1000, R=5, T=2",
  "output": "100.0",
  "level": "basic"
},
{
  "_id": {
    "$oid": "6863b413df9008efb35f7dc9"
  },
  "title": "Check Vowel or Consonant",
  "description": "Check whether a given character is a vowel or consonant.",
  "input": "e",
  "output": "Vowel",
  "level": "basic"
},
{
  "_id": {
    "$oid": "6863b413df9008efb35f7dca"
  },
  "title": "Swap Two Numbers",
  "description": "Swap two numbers without using a third variable.",
  "input": "4 9",
  "output": "9 4",
  "level": "basic"
},
{
  "_id": {
    "$oid": "6863b413df9008efb35f7dcb"
  },
  "title": "Check Armstrong Number",
  "description": "Check whether a number is an Armstrong number.",
  "input": "153",
  "output": "Armstrong Number",
  "level": "basic"
},
{
  "_id": {
    "$oid": "6863b413df9008efb35f7dcc"
  },
  "title": "ASCII Value of Character",
  "description": "Find the ASCII value of a character.",
  "input": "A",
  "output": "65",
  "level": "basic"
},
{
  "_id": {
    "$oid": "6863b413df9008efb35f7dcd"
  },
  "title": "Sum of Natural Numbers",
  "description": "Calculate the sum of first N natural numbers.",
  "input": "10",
  "output": "55",
  "level": "basic"
},
{
  "_id": {
    "$oid": "6863b840df9008efb35f7dcf"
  },
  "title": "Longest Substring Without Repeating Characters",
  "description": "Given a string, find the length of the longest substring without repeating characters.",
  "input": "abcabcbb",
  "output": "3",
  "level": "intermediate"
},
{
  "_id": {
    "$oid": "6863b840df9008efb35f7dd0"
  },
  "title": "Two Sum",
  "description": "Find indices of two numbers that add up to a target.",
  "input": "nums = [2,7,11,15], target = 9",
  "output": "[0, 1]",
  "level": "intermediate"
},
{
  "_id": {
    "$oid": "6863b840df9008efb35f7dd1"
  },
  "title": "Matrix Spiral Traversal",
  "description": "Return elements of a 2D matrix in spiral order.",
  "input": "[[1,2,3],[4,5,6],[7,8,9]]",
  "output": "[1,2,3,6,9,8,7,4,5]",
  "level": "intermediate"
},
{
  "_id": {
    "$oid": "6863b840df9008efb35f7dd2"
  },
  "title": "Valid Parentheses",
  "description": "Check if parentheses in a string are balanced.",
  "input": "()[]{}",
  "output": "true",
  "level": "intermediate"
},
{
  "_id": {
    "$oid": "6863b840df9008efb35f7dd3"
  },
  "title": "Majority Element",
  "description": "Find the element that appears more than ⌊n/2⌋ times.",
  "input": "[3,2,3]",
  "output": "3",
  "level": "intermediate"
},
{
  "_id": {
    "$oid": "6863b840df9008efb35f7dd4"
  },
  "title": "Rotate Matrix 90 Degrees",
  "description": "Rotate a square matrix 90 degrees clockwise.",
  "input": "[[1,2,3],[4,5,6],[7,8,9]]",
  "output": "[[7,4,1],[8,5,2],[9,6,3]]",
  "level": "intermediate"
},
{
  "_id": {
    "$oid": "6863b840df9008efb35f7dd5"
  },
  "title": "Group Anagrams",
  "description": "Group strings that are anagrams of each other.",
  "input": "[\"eat\",\"tea\",\"tan\",\"ate\",\"nat\",\"bat\"]",
  "output": "[[\"eat\",\"tea\",\"ate\"],[\"tan\",\"nat\"],[\"bat\"]]",
  "level": "intermediate"
},
{
  "_id": {
    "$oid": "6863b840df9008efb35f7dd6"
  },
  "title": "Merge Intervals",
  "description": "Merge all overlapping intervals.",
  "input": "[[1,3],[2,6],[8,10],[15,18]]",
  "output": "[[1,6],[8,10],[15,18]]",
  "level": "intermediate"
},
{
  "_id": {
    "$oid": "6863b840df9008efb35f7dd7"
  },
  "title": "Product of Array Except Self",
  "description": "Return array where each element is product of all elements except itself.",
  "input": "[1,2,3,4]",
  "output": "[24,12,8,6]",
  "level": "intermediate"
},
{
  "_id": {
    "$oid": "6863b840df9008efb35f7dd8"
  },
  "title": "Find Peak Element",
  "description": "Find a peak element (greater than neighbors).",
  "input": "[1,2,3,1]",
  "output": "2",
  "level": "intermediate"
},
{
  "_id": {
    "$oid": "6863b840df9008efb35f7dd9"
  },
  "title": "Search in Rotated Array",
  "description": "Search a target in a rotated sorted array.",
  "input": "nums = [4,5,6,7,0,1,2], target = 0",
  "output": "4",
  "level": "intermediate"
},
{
  "_id": {
    "$oid": "6863b840df9008efb35f7dda"
  },
  "title": "Kth Largest Element",
  "description": "Find the kth largest element in an array.",
  "input": "[3,2,1,5,6,4], k = 2",
  "output": "5",
  "level": "intermediate"
},
{
  "_id": {
    "$oid": "6863b840df9008efb35f7ddb"
  },
  "title": "Top K Frequent Elements",
  "description": "Return the k most frequent elements.",
  "input": "nums = [1,1,1,2,2,3], k = 2",
  "output": "[1,2]",
  "level": "intermediate"
},
{
  "_id": {
    "$oid": "6863b840df9008efb35f7ddc"
  },
  "title": "Set Matrix Zeroes",
  "description": "If an element is 0, set its row and column to 0.",
  "input": "[[1,1,1],[1,0,1],[1,1,1]]",
  "output": "[[1,0,1],[0,0,0],[1,0,1]]",
  "level": "intermediate"
},
{
  "_id": {
    "$oid": "6863b840df9008efb35f7ddd"
  },
  "title": "3Sum Problem",
  "description": "Find triplets that sum to zero.",
  "input": "[-1,0,1,2,-1,-4]",
  "output": "[[-1,-1,2],[-1,0,1]]",
  "level": "intermediate"
},
{
  "_id": {
    "$oid": "6863b840df9008efb35f7dde"
  },
  "title": "Binary Search",
  "description": "Perform binary search on sorted array.",
  "input": "[1,2,3,4,5], target = 4",
  "output": "3",
  "level": "intermediate"
},
{
  "_id": {
    "$oid": "6863b840df9008efb35f7ddf"
  },
  "title": "Number of Islands",
  "description": "Count number of islands in a 2D grid (DFS).",
  "input": "[[\"1\",\"1\",\"0\"],[\"0\",\"1\",\"0\"],[\"1\",\"0\",\"1\"]]",
  "output": "3",
  "level": "intermediate"
},
{
  "_id": {
    "$oid": "6863b840df9008efb35f7de0"
  },
  "title": "Minimum Path Sum",
  "description": "Find minimum path sum in a grid from top-left to bottom-right.",
  "input": "[[1,3,1],[1,5,1],[4,2,1]]",
  "output": "7",
  "level": "intermediate"
},
{
  "_id": {
    "$oid": "6863b840df9008efb35f7de1"
  },
  "title": "Climbing Stairs",
  "description": "Count distinct ways to climb stairs with 1 or 2 steps.",
  "input": "5",
  "output": "8",
  "level": "intermediate"
},
{
  "_id": {
    "$oid": "6863b840df9008efb35f7de2"
  },
  "title": "Sort Colors (Dutch Flag Problem)",
  "description": "Sort array of 0s, 1s, and 2s in-place.",
  "input": "[2,0,2,1,1,0]",
  "output": "[0,0,1,1,2,2]",
  "level": "intermediate"
},
{
  "_id": {
    "$oid": "6863b892df9008efb35f7de4"
  },
  "title": "LFU Cache",
  "description": "Design and implement a data structure for Least Frequently Used (LFU) cache.",
  "input": "capacity = 2, operations = [put(1,1), put(2,2), get(1), put(3,3), get(2), get(3)]",
  "output": "[null,null,1,null,-1,3]",
  "level": "advanced"
},
{
  "_id": {
    "$oid": "6863b892df9008efb35f7de5"
  },
  "title": "Longest Valid Parentheses",
  "description": "Find the length of the longest valid (well-formed) parentheses substring.",
  "input": "(()())",
  "output": "6",
  "level": "advanced"
},
{
  "_id": {
    "$oid": "6863b892df9008efb35f7de6"
  },
  "title": "Word Ladder II",
  "description": "Find all shortest transformation sequences from start to end word by changing one letter at a time.",
  "input": "beginWord = \"hit\", endWord = \"cog\", wordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]",
  "output": "[[\"hit\",\"hot\",\"dot\",\"dog\",\"cog\"],[\"hit\",\"hot\",\"lot\",\"log\",\"cog\"]]",
  "level": "advanced"
},
{
  "_id": {
    "$oid": "6863b892df9008efb35f7de7"
  },
  "title": "Serialize and Deserialize Binary Tree",
  "description": "Design an algorithm to serialize and deserialize a binary tree.",
  "input": "root = [1,2,3,null,null,4,5]",
  "output": "[1,2,3,null,null,4,5]",
  "level": "advanced"
},
{
  "_id": {
    "$oid": "6863b892df9008efb35f7de8"
  },
  "title": "Median of Two Sorted Arrays",
  "description": "Find the median of two sorted arrays in O(log(m+n)) time.",
  "input": "nums1 = [1,3], nums2 = [2]",
  "output": "2.0",
  "level": "advanced"
},
{
  "_id": {
    "$oid": "6863b892df9008efb35f7de9"
  },
  "title": "Maximum Flow (Edmonds-Karp Algorithm)",
  "description": "Find the maximum flow in a flow network using Edmonds-Karp algorithm.",
  "input": "Graph adjacency matrix with capacities",
  "output": "Max flow value",
  "level": "advanced"
},
{
  "_id": {
    "$oid": "6863b892df9008efb35f7dea"
  },
  "title": "Palindrome Partitioning II",
  "description": "Find minimum cuts needed to partition a string so that every substring is a palindrome.",
  "input": "\"aab\"",
  "output": "1",
  "level": "advanced"
},
{
  "_id": {
    "$oid": "6863b892df9008efb35f7deb"
  },
  "title": "N-Queens II",
  "description": "Count the total number of distinct solutions to the N-Queens problem.",
  "input": "4",
  "output": "2",
  "level": "advanced"
},
{
  "_id": {
    "$oid": "6863b892df9008efb35f7dec"
  },
  "title": "Russian Doll Envelopes",
  "description": "Find the maximum number of envelopes you can Russian doll (nest).",
  "input": "[[5,4],[6,4],[6,7],[2,3]]",
  "output": "3",
  "level": "advanced"
},
{
  "_id": {
    "$oid": "6863b892df9008efb35f7ded"
  },
  "title": "Find Median from Data Stream",
  "description": "Design a data structure to find median from a stream of integers efficiently.",
  "input": "addNum(1), addNum(2), findMedian(), addNum(3), findMedian()",
  "output": "[null,null,1.5,null,2]",
  "level": "advanced"
},
{
  "_id": {
    "$oid": "6863b892df9008efb35f7dee"
  },
  "title": "Alien Dictionary",
  "description": "Given a sorted dictionary of an alien language, find the order of characters.",
  "input": "[\"wrt\", \"wrf\", \"er\", \"ett\", \"rftt\"]",
  "output": "\"wertf\"",
  "level": "advanced"
},
{
  "_id": {
    "$oid": "6863b892df9008efb35f7def"
  },
  "title": "Minimum Window Substring",
  "description": "Find the minimum window substring of s that contains all chars of t.",
  "input": "s = \"ADOBECODEBANC\", t = \"ABC\"",
  "output": "\"BANC\"",
  "level": "advanced"
},
{
  "_id": {
    "$oid": "6863b892df9008efb35f7df0"
  },
  "title": "Trapping Rain Water",
  "description": "Calculate how much water it can trap after raining given elevation map.",
  "input": "[0,1,0,2,1,0,1,3,2,1,2,1]",
  "output": "6",
  "level": "advanced"
},
{
  "_id": {
    "$oid": "6863b892df9008efb35f7df1"
  },
  "title": "Count of Smaller Numbers After Self",
  "description": "For each element, count how many smaller elements are to its right.",
  "input": "[5,2,6,1]",
  "output": "[2,1,1,0]",
  "level": "advanced"
},
{
  "_id": {
    "$oid": "6863b892df9008efb35f7df2"
  },
  "title": "Binary Tree Maximum Path Sum",
  "description": "Find maximum path sum in a binary tree where path can start and end at any node.",
  "input": "[1,2,3]",
  "output": "6",
  "level": "advanced"
},
{
  "_id": {
    "$oid": "6863b892df9008efb35f7df3"
  },
  "title": "Word Break II",
  "description": "Return all possible sentences where the string can be segmented into dictionary words.",
  "input": "s = \"catsanddog\", wordDict = [\"cat\",\"cats\",\"and\",\"sand\",\"dog\"]",
  "output": "[\"cats and dog\",\"cat sand dog\"]",
  "level": "advanced"
},
{
  "_id": {
    "$oid": "6863b892df9008efb35f7df4"
  },
  "title": "Find K Closest Elements",
  "description": "Find k closest elements to a target in a sorted array.",
  "input": "arr = [1,2,3,4,5], k = 4, x = 3",
  "output": "[1,2,3,4]",
  "level": "advanced"
},
{
  "_id": {
    "$oid": "6863b892df9008efb35f7df5"
  },
  "title": "Largest Rectangle in Histogram",
  "description": "Find largest rectangle in histogram represented by array of heights.",
  "input": "[2,1,5,6,2,3]",
  "output": "10",
  "level": "advanced"
},
{
  "_id": {
    "$oid": "6863b892df9008efb35f7df6"
  },
  "title": "Sliding Window Maximum",
  "description": "Find maximum in each sliding window of size k.",
  "input": "nums = [1,3,-1,-3,5,3,6,7], k = 3",
  "output": "[3,3,5,5,6,7]",
  "level": "advanced"
},
{
  "_id": {
    "$oid": "6863b892df9008efb35f7df7"
  },
  "title": "Expression Add Operators",
  "description": "Add operators (+, -, *) between digits to reach a target value.",
  "input": "num = \"123\", target = 6",
  "output": "[\"1+2+3\", \"1*2*3\"]",
  "level": "advanced"
}]